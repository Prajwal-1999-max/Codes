/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head1=l1;
        ListNode head2=l2;
        ListNode ans=new ListNode();
        ListNode ansHead=ans;
        int carry=0;
        int c1=0;
        int c2=0;
        while(head1!=null || head2!=null){
            ListNode curr=new ListNode();
            if(head1==null)
                c1=0;
            else
                c1=head1.val;
            if(head2==null)
                c2=0;
            else
                c2=head2.val;
            curr.val=c1+c2+carry;
            curr.next=null;
            if(curr.val>9){
                curr.val=curr.val%10;
                carry=1;
            }
            else{
                carry=0;
            }
            ansHead.next=curr;
            ansHead=ansHead.next;
            head1=(head1==null)? null:head1.next;
            head2=(head2==null)? null:head2.next;
        }
        
        if(carry==1){
            ListNode curr=new ListNode();
            curr.val=1;
            curr.next=null;
            ansHead.next=curr;
        }
        return ans.next;
    }
}