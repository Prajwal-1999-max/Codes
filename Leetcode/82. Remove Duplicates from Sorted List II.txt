/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode prev=null;
        ListNode curr=head;

        
        if(head==null || head.next==null)
            return head;       
        
        while(curr!=null && curr.next!=null){
            if(curr.val==curr.next.val){
               
               //checking for the first node repetetions
                if(prev==null){
                    //checking for the number of repetetions 
                    while(head!=null && head.next!=null && (head.val==head.next.val))
                    {
                        head=head.next;
                    }
                    head=head.next;
                    curr=head;
                }
                else{
                    //checking for the number of repetetions
                    while(curr!=null && curr.next!=null && (curr.val==curr.next.val))
                    {
                        curr=curr.next;
                    } 
                    curr=curr.next;
                    prev.next=curr;
                }
            }
            else{
                prev=curr;
               curr=curr.next;
            }
               
            
            
        }
        return head;
    }
}