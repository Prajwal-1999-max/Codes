class meeting{

    int start;

    int end;

    int pos;

    meeting(int start,int end, int pos){

        this.start=start;

        this.end=end;

        this.pos=pos;

    }

}


class meetingComparator implements Comparator<meeting>{

    @Override

    public int compare(meeting o1,meeting o2){

        if(o1.end<o2.end)

        return -1;

        else if(o1.end>o2.end)

        return 1;

        else if(o1.pos<o2.pos)

        return -1;

        

        return 0;

    }

}
class Solution 
{

    //Function to find the maximum number of meetings that can

    //be performed in a meeting room.

    public static int maxMeetings(int start[], int end[], int n)

    {

        // add your code here

        ArrayList<meeting> meet=new ArrayList<meeting>();

        for(int i=0;i<start.length;i++){

            meet.add(new meeting(start[i],end[i],i-1));

        }

        meetingComparator comp=new meetingComparator();

        Collections.sort(meet,comp);

        
int prevEnd=-1;

        int ans=0;

        for(int i=0;i<start.length;i++){

            if(meet.get(i).start>prevEnd){

                ans++;

                prevEnd=meet.get(i).end;

            }
        }

        return ans;

    }

}