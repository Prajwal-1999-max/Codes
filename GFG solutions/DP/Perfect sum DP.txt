Memoized

class Solution{


	public int perfectSum(int arr[],int n, int sum)
 
	{
 
	    // Your code goes here

	    int dp[][]=new int[n+1][sum+1];

	    for(int i=0;i<n+1;i++){

	        for(int j=0;j<sum+1;j++)

	        dp[i][j]=-1;

	    }

	    dp[0][0]=1;

	    
	    return dpfun(arr,n,sum,dp);

	}
 
	public int dpfun(int arr[],int n,int sum,int dp[][]){

	    int mod=1000000007;

	   if(n==0){

	       return dp[n][sum]=sum==0?1:0;

	   }

	   if(dp[n][sum]!=-1)

	    return dp[n][sum];

	   
	   if(arr[n-1]<=sum)

	   return dp[n][sum]=(dpfun(arr,n-1,sum,dp)+
dpfun(arr,n-1,sum-arr[n-1],dp))%mod;

	   else

	   return dp[n][sum]=dpfun(arr,n-1,sum,dp)%mod;

	   
	   
	}
 
}


Top_Down
public int perfectSum(int arr[],int n, int sum)
 
	{
 
	    // Your codegoes here

	    int mod=1000000007;

	    int dp[][]=new int[n+1][sum+1];
	   for(int i=1;i<sum+1;i++){

	        dp[0][i]=0;

	    }

	    dp[0][0]=1;
	    
	    
            for(int i=1;i<n+1;i++){

	        for(int j=0;j<sum+1;j++){

	           if(arr[i-1]>j)

	           dp[i][j]=dp[i-1][j];

	           else

                   dp[i][j]=(dp[i-1][j]+dp[i-1][j-arr[i-1]])%mod;

	            }


             }
	    
 return dp[n][sum]%mod;

	} 